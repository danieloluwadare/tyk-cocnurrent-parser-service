// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: proto/inmemoryservice.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// InmemoryServiceClient is the client API for InmemoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InmemoryServiceClient interface {
	// Sends a greeting
	SaveRequest(ctx context.Context, in *TykServerRequest, opts ...grpc.CallOption) (*TykServerResponse, error)
}

type inmemoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInmemoryServiceClient(cc grpc.ClientConnInterface) InmemoryServiceClient {
	return &inmemoryServiceClient{cc}
}

func (c *inmemoryServiceClient) SaveRequest(ctx context.Context, in *TykServerRequest, opts ...grpc.CallOption) (*TykServerResponse, error) {
	out := new(TykServerResponse)
	err := c.cc.Invoke(ctx, "/main.InmemoryService/SaveRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InmemoryServiceServer is the server API for InmemoryService service.
// All implementations must embed UnimplementedInmemoryServiceServer
// for forward compatibility
type InmemoryServiceServer interface {
	// Sends a greeting
	SaveRequest(context.Context, *TykServerRequest) (*TykServerResponse, error)
	mustEmbedUnimplementedInmemoryServiceServer()
}

// UnimplementedInmemoryServiceServer must be embedded to have forward compatible implementations.
type UnimplementedInmemoryServiceServer struct {
}

func (UnimplementedInmemoryServiceServer) SaveRequest(context.Context, *TykServerRequest) (*TykServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveRequest not implemented")
}
func (UnimplementedInmemoryServiceServer) mustEmbedUnimplementedInmemoryServiceServer() {}

// UnsafeInmemoryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InmemoryServiceServer will
// result in compilation errors.
type UnsafeInmemoryServiceServer interface {
	mustEmbedUnimplementedInmemoryServiceServer()
}

func RegisterInmemoryServiceServer(s grpc.ServiceRegistrar, srv InmemoryServiceServer) {
	s.RegisterService(&InmemoryService_ServiceDesc, srv)
}

func _InmemoryService_SaveRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TykServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InmemoryServiceServer).SaveRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.InmemoryService/SaveRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InmemoryServiceServer).SaveRequest(ctx, req.(*TykServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InmemoryService_ServiceDesc is the grpc.ServiceDesc for InmemoryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InmemoryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "main.InmemoryService",
	HandlerType: (*InmemoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveRequest",
			Handler:    _InmemoryService_SaveRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/inmemoryservice.proto",
}
