// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "github.com/danieloluwadare/tyk-cocnurrent-parser-service/client/model"
	mock "github.com/stretchr/testify/mock"
)

// ITaskRepository is an autogenerated mock type for the ITaskRepository type
type ITaskRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: task
func (_m *ITaskRepository) Save(task model.Task) (*model.Task, error) {
	ret := _m.Called(task)

	var r0 *model.Task
	if rf, ok := ret.Get(0).(func(model.Task) *model.Task); ok {
		r0 = rf(task)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Task) error); ok {
		r1 = rf(task)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewITaskRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewITaskRepository creates a new instance of ITaskRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewITaskRepository(t mockConstructorTestingTNewITaskRepository) *ITaskRepository {
	mock := &ITaskRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
